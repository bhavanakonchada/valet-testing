name: VSTest

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET 3.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET 5.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore Sox_Audito_ACL_Poc/Sox_Audito_ACL_Poc.sln
    - name: Build
      run: dotnet build Sox_Audito_ACL_Poc/Sox_Audito_ACL_Poc.sln --no-restore
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1
    - name: Install Dependencies for VSTest
      shell: pwsh
      run: |
        Set-PSRepository PSGallery -InstallationPolicy Trusted
        Install-Module VstsTaskSdk -AllowClobber
    - name: Executing VSTest
      continue-on-error: true
      env:
        DEFAULT_ROOT: ${{github.workspace}}
        RESULTS_FOLDER: ${{ runner.temp }}/${{ github.run_id }}_resultsfolder
        SEARCH_PATTERN: "**\\*UnitTest*.dll;!**\\*TestAdapter.dll;!**\\obj\\**;!**\\ref\\**"
        ARGS: "/Platform:x64; /ResultsDirectory:${{ runner.temp }}/${{ github.run_id }}_resultsfolder;/Logger:trx"
      shell: pwsh
      run: |
       Import-Module -Name VstsTaskSdk
       Write-Host "Finding files for VSTest for execute.." 
       Write-Host "Results folder:" $ResultsPath
       $Pattern = $env:SEARCH_PATTERN.Split(';').Trim()
       Write-Host "Patterns are:" $ResultsPath
       $files = Find-VstsMatch -DefaultRoot $env:DEFAULT_ROOT -Pattern $Pattern
       Write-Host "Files found:" $files 
       $exe = "vstest.console.exe"       
       & $exe $files $env:ARGS
    - name: Uploading Test Results
      env:
        RESULTS_FOLDER: ${{ runner.temp }}/${{ github.run_id }}_resultsfolder
      uses: "actions/upload-artifact@v2"
      with:
        name: TestResultsFile
        path: ${{ env.RESULTS_FOLDER }}
   
