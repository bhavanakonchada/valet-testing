name: VSTest

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET 3.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET 5.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore Sox_Audito_ACL_Poc/Sox_Audito_ACL_Poc.sln
    - name: Build
      run: dotnet build Sox_Audito_ACL_Poc/Sox_Audito_ACL_Poc.sln --no-restore
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1
    - name: Install Dependencies for VSTest
      shell: pwsh
      run: |
        Set-PSRepository PSGallery -InstallationPolicy Trusted
        Install-Module VstsTaskSdk -AllowClobber
    - name: Executing VSTest
      continue-on-error: true
      env:
        SEARCH_FOLDER: "${{ github.workspace }}"
        TEST_RESULTS_FOLDER: "${{ runner.temp }}/${{ github.run_id }}_resultsfolder"
        PATTERN: "**\\*Test*.dll;!**\\*TestAdapter.dll;!**\\obj\\**"
        ARGS: /Logger:trx /Platform:x64
      shell: pwsh
      run: |-
        Import-Module -Name VstsTaskSdk
        $SearchPattern = $env:PATTERN.Split(';').Trim()
        Write-Host "Search Pattern: " $SearchPattern
        Write-Host "Finding files for VSTest to execute.."
        $files = Find-VstsMatch -DefaultRoot $env:SEARCH_FOLDER -Pattern $SearchPattern -Verbose
        Write-Host "Files found:" $files
        $exe = "vstest.console.exe"
        $args = $env:ARGS.Split(';').Trim()
        Write-Host "Arguments are: " $args
        & $exe $files /ResultsDirectory:$env:TEST_RESULTS_FOLDER $args
    - name: Upload Test Results
      env:
        RESULTS_FOLDER: "${{ runner.temp }}/${{ github.run_id }}_resultsfolder"
      uses: actions/upload-artifact@v2
      with:
        name: TestResultsFile
        path: "${{ env.RESULTS_FOLDER }}"
   
