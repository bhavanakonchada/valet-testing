# This is a basic workflow to help you get started with Actions

name: extract-files-validation

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
        
  ubuntu_validation_job:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - run: npm i @actions/exec
    - name: Extract Files
      uses: actions/github-script@v4
      env:
        DESTINATION_FOLDER: "${{ github.workspace }}/untarFolder"
        ARCHIVE_FILE_PATTERNS: |
          **/*.tar
          **/*.zip
      with:
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const exec = require('@actions/exec')
          const target = path.resolve(process.env.DESTINATION_FOLDER)
          const patterns = process.env.ARCHIVE_FILE_PATTERNS
          const globber = await glob.create(patterns)
          await io.mkdirP(path.dirname(target))
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            await exec.exec(`7z x ${file} -o${target} -aoa`)
          }
    - name: Repo file structure
      shell: bash
      run: |-
         tree
         
  windows_validation_job:
    runs-on: windows-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - run: npm i @actions/exec
    - name: Extract Files
      uses: actions/github-script@v4
      env:
        DESTINATION_FOLDER: "${{ github.workspace }}/untarFolder"
        ARCHIVE_FILE_PATTERNS: |
          **/*.tar
          **/*.zip
      with:
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const exec = require('@actions/exec')
          const target = path.resolve(process.env.DESTINATION_FOLDER)
          const patterns = process.env.ARCHIVE_FILE_PATTERNS
          const globber = await glob.create(patterns)
          await io.mkdirP(path.dirname(target))
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            await exec.exec(`7z x ${file} -o${target} -aoa`)
          }
          
  mac_validation_job:
    runs-on: macOS-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - run: npm i @actions/exec
    - name: Extract Files
      uses: actions/github-script@v4
      env:
        DESTINATION_FOLDER: "${{ github.workspace }}/untarFolder"
        ARCHIVE_FILE_PATTERNS: |
          **/*.tar
          **/*.zip
      with:
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const exec = require('@actions/exec')
          const target = path.resolve(process.env.DESTINATION_FOLDER)
          const patterns = process.env.ARCHIVE_FILE_PATTERNS
          const globber = await glob.create(patterns)
          await io.mkdirP(path.dirname(target))
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            await exec.exec(`7z x ${file} -o${target} -aoa`)
          }

